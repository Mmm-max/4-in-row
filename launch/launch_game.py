#!/usr/bin/env python3
"""
Connect4 Game Launcher
–ö—Ä–æ—Å—Å–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω—ã–π –∑–∞–ø—É—Å–∫–∞—Ç–µ–ª—å –∏–≥—Ä—ã —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –ø–æ–∏—Å–∫–æ–º Java –∏ JavaFX
"""

import os
import sys
import subprocess
import platform
import shutil
from pathlib import Path

class Connect4Launcher:
    def __init__(self):
        self.project_dir = Path(__file__).parent.absolute()
        self.jar_file = self.project_dir / "out" / "artifacts" / "4_in_row_jar" / "4_in_row_jar.jar"
        self.system = platform.system()
        
    def print_header(self):
        print("üéÆ Connect4 Game Launcher")
        print("=" * 25)
        print()
        
    def check_jar_file(self):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ JAR —Ñ–∞–π–ª–∞"""
        if not self.jar_file.exists():
            print(f"‚ùå JAR —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {self.jar_file}")
            print("   –°–Ω–∞—á–∞–ª–∞ —Å–æ–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç –≤ IntelliJ IDEA")
            return False
        print("‚úÖ JAR —Ñ–∞–π–ª –Ω–∞–π–¥–µ–Ω")
        return True
        
    def check_java(self):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ Java"""
        java_cmd = shutil.which("java")
        if not java_cmd:
            print("‚ùå Java –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ PATH")
            print("   –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Java 11+ —Å https://adoptium.net/")
            return False
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é Java
        try:
            result = subprocess.run(["java", "-version"], capture_output=True, text=True)
            version_line = result.stderr.split('\n')[0]
            version = version_line.split('"')[1]
            major_version = int(version.split('.')[0])
            
            if major_version < 11:
                print(f"‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω–∞ Java –≤–µ—Ä—Å–∏–∏ {version}, —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è Java 11+")
            else:
                print(f"‚úÖ Java –≤–µ—Ä—Å–∏–∏ {version}")
                
        except Exception as e:
            print(f"‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤–µ—Ä—Å–∏—é Java: {e}")
            
        return True
        
    def find_javafx(self):
        """–ò—â–µ—Ç JavaFX –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö"""
        javafx_paths = []
        
        if self.system == "Darwin":  # macOS
            javafx_paths = [
                Path("/Library/Java/Extensions/javafx-sdk-23.0.1/lib"),
                Path.home() / "javafx-sdk-23.0.1" / "lib",
                self.project_dir / "javafx-sdk-23.0.1" / "lib",
                Path("/opt/javafx/lib"),
            ]
        elif self.system == "Linux":
            javafx_paths = [
                Path("/usr/share/openjfx/lib"),
                Path("/usr/lib/jvm/javafx-sdk/lib"),
                Path("/opt/javafx/lib"),
                Path.home() / "javafx-sdk-23.0.1" / "lib",
                self.project_dir / "javafx-sdk-23.0.1" / "lib",
            ]
        elif self.system == "Windows":
            javafx_paths = [
                Path("C:/Program Files/JavaFX/javafx-sdk-23.0.1/lib"),
                Path("C:/javafx-sdk-23.0.1/lib"),
                self.project_dir / "javafx-sdk-23.0.1" / "lib",
                Path.home() / "javafx-sdk-23.0.1" / "lib",
                Path("D:/javafx-sdk-23.0.1/lib"),
            ]
            
        # –ò—â–µ–º JavaFX
        for path in javafx_paths:
            if path.exists() and (path / "javafx.base.jar").exists():
                print(f"‚úÖ JavaFX –Ω–∞–π–¥–µ–Ω: {path}")
                return str(path)
                
        print("‚ùå JavaFX –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö")
        self.show_javafx_install_help()
        return None
        
    def show_javafx_install_help(self):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–º–æ—â—å –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ JavaFX"""
        print()
        print("üì• –í–∞—Ä–∏–∞–Ω—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–∫–∏ JavaFX:")
        print()
        
        if self.system == "Darwin":  # macOS
            print("üçé macOS:")
            print("   brew install openjfx")
            print("   –∏–ª–∏ —Å–∫–∞—á–∞–π—Ç–µ —Å https://openjfx.io/ –∏ —Ä–∞—Å–ø–∞–∫—É–π—Ç–µ –≤:")
            print("   /Library/Java/Extensions/javafx-sdk-23.0.1/")
        elif self.system == "Linux":
            print("üêß Linux:")
            print("   sudo apt install openjfx  # Ubuntu/Debian")
            print("   sudo dnf install openjfx  # Fedora")
            print("   –∏–ª–∏ —Å–∫–∞—á–∞–π—Ç–µ —Å https://openjfx.io/")
        elif self.system == "Windows":
            print("ü™ü Windows:")
            print("   –ó–∞–ø—É—Å—Ç–∏—Ç–µ INSTALL_JAVAFX.bat –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏")
            print("   –∏–ª–∏ —Å–∫–∞—á–∞–π—Ç–µ —Å https://openjfx.io/")
            print("   –∏ —Ä–∞—Å–ø–∞–∫—É–π—Ç–µ –≤ C:\\javafx-sdk-23.0.1\\")
            
        print()
        print("üìÅ –ò–ª–∏ –ø–æ–º–µ—Å—Ç–∏—Ç–µ JavaFX –≤ –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞:")
        print(f"   {self.project_dir / 'javafx-sdk-23.0.1'}/")
        
    def get_jvm_args(self, javafx_path):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç JVM –∞—Ä–≥—É–º–µ–Ω—Ç—ã –¥–ª—è –∑–∞–ø—É—Å–∫–∞"""
        args = [
            "java",
            "--module-path", javafx_path,
            "--add-modules", "javafx.controls,javafx.fxml",
            "-Dprism.order=sw",
            "-Dprism.verbose=false",
            "-Djava.awt.headless=false",
        ]
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –¥–ª—è Apple Silicon
        if self.system == "Darwin" and platform.machine() == "arm64":
            args.append("-Dprism.allowhidpi=false")
            
        args.extend(["-jar", str(self.jar_file)])
        return args
        
    def launch_game(self, javafx_path):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –∏–≥—Ä—É"""
        print("üöÄ –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã...")
        print()
        
        args = self.get_jvm_args(javafx_path)
        
        try:
            result = subprocess.run(args, cwd=self.project_dir)
            exit_code = result.returncode
            
            print()
            if exit_code == 0:
                print("‚úÖ –ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —É—Å–ø–µ—à–Ω–æ")
            else:
                print(f"‚ùå –ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–æ–π (–∫–æ–¥: {exit_code})")
                print()
                print("üîß –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:")
                print("   - –û–±–Ω–æ–≤–∏—Ç–µ Java –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏")
                print("   - –û–±–Ω–æ–≤–∏—Ç–µ JavaFX –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏")
                print("   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª–∞–º")
                
            return exit_code
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
            return 1
            
    def run(self):
        """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞"""
        self.print_header()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º JAR —Ñ–∞–π–ª
        if not self.check_jar_file():
            return 1
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º Java
        if not self.check_java():
            return 1
            
        # –ò—â–µ–º JavaFX
        javafx_path = self.find_javafx()
        if not javafx_path:
            return 1
            
        # –ó–∞–ø—É—Å–∫–∞–µ–º –∏–≥—Ä—É
        return self.launch_game(javafx_path)

def main():
    launcher = Connect4Launcher()
    exit_code = launcher.run()
    
    if exit_code != 0:
        input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")
    
    sys.exit(exit_code)

if __name__ == "__main__":
    main()
